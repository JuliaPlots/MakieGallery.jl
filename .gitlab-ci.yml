variables:
  CI_IMAGE_TAG: "opengl"
  MODERNGL_DEBUGGING: "true"
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"
  CI_DEV_PKGS: "Makie#master AbstractPlotting#sd/geometrybasics GLMakie#sd/geometrybasics GeometryBasics#master Packing#sd/geometrybasics FreeTypeAbstraction#sd/geometrybasics StatsMakie#sd/geometrybasics MeshIO#sd/geometrybasics https://github.com/SimonDanisch/GridLayoutBase.jl#sd/geometrybasics"

stages:
  - test
  - refimages

gallerytest:

  stage: test

  tags:
      - xorg

  image: "juliagpu/julia:v1.3-${CI_IMAGE_TAG}"

  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .julia/artifacts

  before_script:
      - apt-get -qq update
      # glfw
      - apt-get install -y cmake xorg-dev mesa-utils p7zip-full

  script:
    - mkdir -p $JULIA_DEPOT_PATH # Pkg.jl#325
    - glxinfo | grep 'version'
    - julia -e 'using InteractiveUtils; versioninfo()'
    - julia --project -e "using Pkg;
                          pkg\"add $CI_DEV_PKGS\""
    - julia --project -e 'using Pkg; pkg"test"'

  artifacts:
    when: always
    paths:
      - test/tested_different
      - test/test_recordings
      - Project.toml
      - Manifest.toml
    expire_in: 4 days

deploy:

  stage: refimages

  when: manual

  dependencies:
    - gallerytest

  tags:
    - xorg

  image: "juliagpu/julia:v1.3-${CI_IMAGE_TAG}"

  before_script:
      - apt-get -qq update
      - apt-get install -y cmake xorg-dev mesa-utils p7zip-full

  script:
    - julia --project test/upgrade_recordings.jl
